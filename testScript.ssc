//
// Name: planetarium emu
// License: Public Domain
// Author: David Elkayam
// Version: 0.2
// Description: sun-set polaris planets
//


include("save_state.inc");

saveState("start");


function constTravel(cons, before, art)
{
	for (i=0; i<cons.length; i++)
	{	
		objName = cons[i];
		core.selectConstellationByName(objName);
		StelMovementMgr.autoZoomIn(6);
		core.wait(1);
		StelMovementMgr.zoomTo(40,8);
		core.wait(before);
		ConstellationMgr.setFlagArt(true);
		core.wait(art);
		ConstellationMgr.setFlagArt(false);
	}
}


function FastAndSlow(fast, delay, stopSpeed)
{
	for(t=fast; t>stopSpeed; t--)
	{
		core.setTimeRate(t);
		core.wait(delay);
	}
}

function outAndIn(object)
{
	core.wait(2);
	StelMovementMgr.autoZoomOut(2);
	core.wait(0.7);
	StelMovementMgr.autoZoomOut(2);
	core.selectObjectByName(object, false);
	StelMovementMgr.setFlagTracking(true);
	core.wait(0.5);
	StelMovementMgr.autoZoomIn(1);
	core.wait(0.5);
	StelMovementMgr.autoZoomIn(2);
	core.wait(0.5);
	StelMovementMgr.autoZoomIn(2);

}

function pause()
{
    var oldEquator = GridLinesMgr.getFlagEquatorLine();
    var pauseLabel = LabelMgr.labelScreen(">>",200,200,true,20,"#ff0000");
    while (oldEquator == GridLinesMgr.getFlagEquatorLine())
    {
        core.wait(0.1);
    }
    GridLinesMgr.setFlagEquatorLine(oldEquator);
    LabelMgr.deleteLabel(pauseLabel);
    return;
}

function setStage()
{
	ConstellationMgr.setFlagLabels(false);
	SolarSystem.setFlagPlanets(true);
	LandscapeMgr.setFlagLandscape(true);
	LandscapeMgr.setFlagAtmosphere(true);
	LandscapeMgr.setFlagFog(true);
	StelMovementMgr.autoZoomIn(3);

	StelMovementMgr.setAutoMoveDuration(2);
	
	core.goHome();
	StelMovementMgr.autoZoomIn(1);
	core.setTimeRate(0);
}

function goToNPole()
{
	LandscapeMgr.setFlagAtmosphere(false);
	LandscapeMgr.setFlagFog(false);
	core.setObserverLocation(15, 90 , 100, t);
}


setStage();



StelMovementMgr.lookWest(true);
core.setDate("2021:08:12T15:00:01");
LabelMgr.labelScreen("2021-08-12 19:00:01", 200, 200, true, 20, "#ff0000");
core.wait(5);
LabelMgr.deleteAllLabels();

pause();

core.selectObjectByName("Sun", false);
StelMovementMgr.setFlagTracking(true);
StelMovementMgr.setFlagTracking(false);
FastAndSlow(500,0.08,100);
core.waitFor("2021-08-12T17:30:01");

pause();

StelMovementMgr.zoomTo(110,5);
StelMovementMgr.turnUp(true);

goToNPole(30);

FastAndSlow(50,0.01,5);
StelMovementMgr.turnUp(false);
ConstellationMgr.setFlagIsolateSelected(true);

core.selectConstellationByName("Ursa Minor");
StelMovementMgr.autoZoomIn(2);
StelMovementMgr.zoomTo(80,2);
core.wait(8);



ConstellationMgr.setFlagLines(true);
pause();
core.wait(2);
ConstellationMgr.setFlagLines(false);


core.selectConstellationByName("Ursa Major");
StelMovementMgr.autoZoomIn(2);
StelMovementMgr.zoomTo(80,2);
core.wait(8);

ConstellationMgr.setFlagLines(true);
core.wait(2);
ConstellationMgr.setFlagLines(false);


core.selectConstellationByName("Libra");
StelMovementMgr.autoZoomIn(2);
StelMovementMgr.zoomTo(80,2);
core.wait(8);

ConstellationMgr.setFlagLines(true);
core.wait(2);
ConstellationMgr.setFlagLines(false);
ConstellationMgr.setFlagConstellationPick(false);
ConstellationMgr.setFlagIsolateSelected(false);

LandscapeMgr.setFlagAtmosphere(false);
LandscapeMgr.setFlagFog(false);

LandscapeMgr.setFlagLandscape(false);
outAndIn("Moon");
core.wait(2);
pause();
outAndIn("Mars");
core.wait(2);
pause();
outAndIn("Venus");
core.wait(2);
pause();
outAndIn("Saturn");
core.wait(3);
pause();
// go to mimas
outAndIn("Saturn ");
core.wait(3);
pause();
outAndIn("Sun");
LandscapeMgr.setFlagAtmosphere(true);
LandscapeMgr.setFlagFog(true);

StelMovementMgr.setFlagTracking(false);

restoreState("start");
LandscapeMgr.setFlagLandscape(true);
core.goHome();


